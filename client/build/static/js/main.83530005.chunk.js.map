{"version":3,"sources":["utils/Auth.js","components/Nav/index.js","components/LoginForm/index.js","components/Login/index.js","components/RegisterForm/index.js","components/Register/index.js","components/Grid/index.js","pages/PublicRoute/index.js","App.js","index.js"],"names":["Auth","isAuthenticated","authenticate","cb","_this","this","fetch","credentials","then","res","json","user","catch","err","console","log","signout","_this2","method","Nav","state","open","width","window","innerWidth","updateWidth","newState","setState","toggleNav","addEventListener","removeEventListener","react_default","a","createElement","className","Link","to","onClick","data-toggle","data-target","aria-controls","aria-expanded","aria-label","concat","id","location","pathname","Component","LoginForm","onLogin","props","ref","elem","form","onSubmit","e","preventDefault","username","usernameElem","value","password","passwordElem","input","type","name","placeholder","React","Login","redirectToReferrer","login","data","body","JSON","stringify","headers","Content-Type","response","status","from","Redirect","components_LoginForm","RegisterForm","onRegister","Register","register","assign","components_RegisterForm","Container","_ref","fluid","children","PublicRoute","listStyle","color","AuthButton","withRouter","history","push","PrivateRoute","_ref2","component","rest","Object","objectWithoutProperties","Route","render","AuthExample","BrowserRouter","components_Nav","style","Switch","path","App_PrivateRoute","ProtectedRoute","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.83530005.chunk.js","sourcesContent":["/*Authentication*/\n/**\n * I decide to move everything out here to clean up the environment\n */\n\nconst Auth = {\n\tisAuthenticated: false,\n\tauthenticate(cb) {\n\t\t// req.user on backend will contain user info if\n\t\t// this person has credentials that are valid\n\t\tfetch('api/users/user', {\n\t\t\tcredentials: 'include'\n\t\t})\n\t\t.then((res) => {\n\t\t\tthis.isAuthenticated = true\n\t\t\tif (typeof cb === 'function') {\n\t\t\t\tcb(res.json().user);\n\t\t\t}\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log('Error fetching authorized user.');\n\t\t});\n\t},\n\tsignout(cb) {\n\t\tfetch('api/users/logout', {\n\t\t\tmethod: 'POST',\n\t\t\tcredentials: 'include'\n\t\t})\n\t\t.then((res) => {\n\t\t\tthis.isAuthenticated = false; \n\t\t\tif (typeof cb === 'function') {\n\t\t\t\t// user was logged out\n\t\t\t\tcb(true);\n\t\t\t}\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log('Error logging out user.');\n\t\t\tif (typeof cb === 'function') {\n\t\t\t\t// user was not logged out\n\t\t\t\tcb(false);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport default Auth;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n// import Login from \"../LoginForm\";\n\nclass Nav extends Component {\n  state = {\n    open: false,\n    width: window.innerWidth\n  };\n\n  updateWidth = () => {\n    const newState = { width: window.innerWidth };\n\n    if (this.state.open && newState.width > 991) {\n      newState.open = false;\n    }\n\n    this.setState(newState);\n  };\n\n  toggleNav = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWidth);\n  }\n\n  componentWillUnMount() {\n    window.removeEventListener(\"resize\", this.updateWidth);\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-2\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Auth Plate\n        </Link>\n        <button\n          onClick={this.toggleNav}\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/login\"\n              >\n                Login\n              </Link>\n            </li>\n            {/* <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/\"\n              >\n                Search\n              </Link>\n            </li> */}\n            {/* <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/saved\"\n              >\n                Saved\n              </Link>\n            </li> */}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React from 'react'\n\nclass LoginForm extends React.Component {\n\t// refs\n\tform: null;\n\tusernameElem: null;\n\tpasswordElem: null;\n\n\trender() {\n\t\tconst { onLogin } = this.props;\n\t\treturn (\n\t\t\t\n\t\t\t\t<form\n\t\t\t\t\tref={(elem) => this.form = elem}\n\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn onLogin({\n\t\t\t\t\t\t\tusername: this.usernameElem.value,\n\t\t\t\t\t\t\tpassword: this.passwordElem.value\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input className=\"form-control\" ref={(input) => this.usernameElem = input} type='text' name=\"username\" placeholder='Enter Username' /><br/>\n\t\t\t\t\t\t<input className=\"form-control\" ref={(input) => this.passwordElem = input} type='password' name=\"password\" placeholder='Password' /><br/>\n\t\t\t\t\t\t<button className=\"btn btn-success\" type='submit'>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\n\t\t)\n\t}\n}\n\nexport default LoginForm","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport LoginForm from \"../LoginForm\";\nimport Auth from \"../../utils/Auth\";\n//Uses the Auth methods to actually login with the LoginForm Component.\nclass Login extends React.Component {\n    //Initial boolean to check for authenticated user\n\tstate = {\n\t\tredirectToReferrer: false\n\t}\n    /* We need to POST to the API the users info,\n        This will get passed down as a prop to the LoginForm */\n\tlogin = (data) => {\n\t\tconsole.log('Logging in ' + data.username);\n\t\tfetch('api/users/login', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(data),\n\t\t\tcredentials: 'include',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t})\n\t\t.then((response) => {\n\t\t\tif (response.status === 200) { //All good\n\t\t\t\tAuth.authenticate(() => { //Update the boolean and take off the cuffs\n\t\t\t\t\tthis.setState({ redirectToReferrer: true })\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.catch((err) => {// No beuno, kick them\n\t\t\tconsole.log('Error logging in.', err);\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { from } = this.props.location.state || { from: { pathname: '/protected' } }\n\t\tconst { redirectToReferrer } = this.state\n\t\t\n\t\tif (redirectToReferrer) {\n\t\t\treturn (\n\t\t\t\t<Redirect to={from}/>\n\t\t\t)\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>You must log in to view the page at {from.pathname}</p>\n\t\t\t\t<LoginForm onLogin={this.login} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Login;","import React from 'react'\n\n\n\nclass RegisterForm extends React.Component {\n\t// refs\n\tform: null;\n\tusernameElem: null;\n\tpasswordElem: null;\n\n\trender() {\n\t\tconst { onRegister } = this.props;\n\t\tconsole.log(`Register form props are: ${JSON.stringify(this.props)}`);\n\t\t\n\t\treturn (\n\t\t\t\n\t\t\t\t<form\n\t\t\t\t\tref={(elem) => this.form = elem}\n\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn onRegister({\n\t\t\t\t\t\t\tusername: this.usernameElem.value,\n\t\t\t\t\t\t\tpassword: this.passwordElem.value\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input className=\"form-control\" ref={(input) => this.usernameElem = input} type='text' name=\"username\" placeholder='Enter Username' /><br/>\n\t\t\t\t\t\t<input className=\"form-control\"  ref={(input) => this.passwordElem = input} type='password' name=\"password\" placeholder='Password' /><br/>\n\t\t\t\t\t\t<button className=\"btn btn btn-primary\" type='submit'>Submit</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\n\t\t)\n\t}\n}\n\nexport default RegisterForm","import React from 'react';\nimport RegisterForm from \"../RegisterForm\";\n//The component for doing the actual signup of the User\nclass Register extends React.Component {\n\tstate = {\n\t\tredirectToReferrer: false\n\t}\n\n\tregister = (data) => {\n\t\tfetch('api/users/register', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(data),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tcredentials: 'include'\n\t\t})\n\t\t.then((response) => {\n\t\t\tif (response.status === 200) {\n\t\t\t\tconsole.log('Succesfully registered user!');\n\t\t\t\t//relocate to the login page\n\t\t\t\twindow.location.assign(\"/protected\");\n\t\t\t}\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log('Error registering user.', err);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h4>Register a New User</h4>\n\t\t\t\t<RegisterForm onRegister={this.register} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Register","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react'\n/*ToDo*/\n/**\n * Let's get some styling in here\n */\n\n/* This is a very simple component.. it probably doesn't need to be a smart component at this point but you never know what's goingto happen in the future */\nclass PublicRoute extends React.Component {\n\trender() {\n\t\treturn (\n            <div>\n                <h3>This is a Public Page Here</h3>\n                <p>Anyone can see this content</p>\n            </div>\t\n\t\t)\n\t}\n}\n\nexport default PublicRoute","import React from 'react'\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tLink,\n  Redirect,\n  Switch,\n\twithRouter\n} from 'react-router-dom';\nimport Auth from \"./utils/Auth\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport {Container} from \"./components/Grid\";\nimport PublicRoute from \"./pages/PublicRoute\";\nimport ProtectedRoute from \"./pages/PublicRoute\";\nimport './App.css';\n\n//I want to add some basic inline styling here, even though we are bringing in styles\nconst listStyle = {\n\tcolor: 'cornflowerblue',\n\tlistStyle:'none'\n  };\n//Now we have all the stuff we need .. let's render some components with the Router\nconst AuthExample = () => (\n\t<Router>\n\t\t<div>\n      \t\t<Nav className=\"App-header\"/>\n\t\t\t<Container>\n\t\t\t\t<AuthButton/>\n\t\t\t\t<ul style={listStyle}>\n\t\t\t\t\t<li><Link to=\"/public\">Public Page</Link></li>\n\t\t\t\t\t<li><Link to=\"/protected\">Protected Page</Link></li>\n\t\t\t\t\t<li><Link to=\"/register\">Register a New User</Link></li>\n\t\t\t\t</ul>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/public\" component={PublicRoute}/>\n\t\t\t\t\t<Route path=\"/login\" component={Login}/>\n\t\t\t\t\t<Route path=\"/register\" component={Register}/>\n\t\t\t\t\t<PrivateRoute path=\"/protected\" component={ProtectedRoute}/>\n\t\t\t\t\t{/* <Route component={NoMatch} /> */}\n\t\t\t\t</Switch>\n\t\t\t</Container>\n\t\t</div>\n\t</Router>\n)\n\n\n//Authbutton component / withRouter is imported from react-router\nconst AuthButton = withRouter(({ history }) => (\n\tAuth.isAuthenticated ? (\n\t\t<div className=\"container\">\n\t\t\t<p>Success! You are Logged In!</p>\n\t\t\t<button className=\"btn btn-danger\" \n\t\t\t\tonClick={() => {\n\t\t\t\t\tAuth.signout(() => history.push('/'))\n\t\t\t\t}}>\n\t\t\t\tSign out\n\t\t\t</button>\n\t\t</div>\n\t) : (\n\t\t<p>You are not logged in.</p>\n\t)\n))\n\n// This is the private route component this checks for an authorized user here\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n\t<Route {...rest} render={props => (\n\t\tAuth.isAuthenticated ? (\n\t\t\t<Component {...props}/>\n\t\t) : (\n\t\t\t<Redirect to={{\n\t\t\t\tpathname: '/login',\n\t\t\t\tstate: { from: props.location }\n\t\t\t}}/>\n\t\t)\n\t)}/>\n)\n\n\n\n\n\n\n\n\nexport default AuthExample\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}